#!/usr/bin/env node

import { db } from '../lib/db/database-service'
import { SupabaseHotDealRepository } from '../lib/db/supabase/repositories/hotdeal-repository'
import { config } from 'dotenv'

// ÌôòÍ≤ΩÎ≥ÄÏàò Î°úÎìú
config({ path: '.env.local' })

async function migrateHotDealsToSupabase() {
  console.log('üöÄ Starting migration to Supabase...')
  
  const supabaseRepo = new SupabaseHotDealRepository()
  
  try {
    // LocalStorageÏóêÏÑú Î™®Îì† Ìï´Îîú Í∞ÄÏ†∏Ïò§Í∏∞
    const hotdeals = await db.hotdeals.findAll()
    console.log(`üìä Found ${hotdeals.length} hotdeals to migrate`)
    
    let migrated = 0
    let skipped = 0
    let failed = 0
    
    for (const hotdeal of hotdeals) {
      try {
        // Ï§ëÎ≥µ ÌôïÏù∏
        const existing = await supabaseRepo.findBySourceAndPostId(
          hotdeal.source,
          hotdeal.source_id
        )
        
        if (existing) {
          console.log(`‚è≠Ô∏è  Skipping duplicate: ${hotdeal.source} - ${hotdeal.source_id}`)
          skipped++
        } else {
          // SupabaseÏóê Ï†ÄÏû•
          const result = await supabaseRepo.create(hotdeal)
          if (result) {
            migrated++
            if (migrated % 10 === 0) {
              console.log(`‚úÖ Migrated ${migrated} hotdeals...`)
            }
          } else {
            failed++
            console.error(`‚ùå Failed to migrate: ${hotdeal.source} - ${hotdeal.source_id}`)
          }
        }
      } catch (error) {
        failed++
        console.error(`‚ùå Error migrating hotdeal:`, error)
      }
    }
    
    console.log('\nüìä Migration Summary:')
    console.log(`‚úÖ Successfully migrated: ${migrated}`)
    console.log(`‚è≠Ô∏è  Skipped (duplicates): ${skipped}`)
    console.log(`‚ùå Failed: ${failed}`)
    console.log(`üìä Total processed: ${hotdeals.length}`)
    
  } catch (error) {
    console.error('‚ùå Migration failed:', error)
    process.exit(1)
  }
}

// Ïã§Ìñâ
if (require.main === module) {
  migrateHotDealsToSupabase()
    .then(() => {
      console.log('‚úÖ Migration completed!')
      process.exit(0)
    })
    .catch((error) => {
      console.error('‚ùå Migration error:', error)
      process.exit(1)
    })
}